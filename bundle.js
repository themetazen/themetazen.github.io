(()=>{"use strict";const e="metazen",t={usd:"$",eur:"€",rub:"₽",krw:"₩",cny:"¥"},s=e=>document.querySelector(e),n=()=>{document.documentElement.style.setProperty("--app-height",`${window.innerHeight}px`)},i=JSON.parse(localStorage.getItem(`${e}`))||{currency:"usd",address:null},o=e=>{const s=Object.assign({},...e),{current_price:n,price_change_percentage_24h:o}=s,a=n.toFixed(2),r=o.toFixed(2),l=t[i.currency];c.innerHTML=`\n        <div class="card__price">${l}${a}</div>\n        <div class="card__change ${r<0?"falling":"rising"}"}">\n            <strong>${r}% <span>&bull;</span> 24h<strong>\n        </div>\n    `},a=async()=>{(async function(e){return await fetch(e,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>{if(!e.ok)throw new Error(e.statusText);return e})).then((e=>{const t=e.json();return Promise.resolve(t)})).catch((e=>Promise.reject({error:"Error parse"})))})(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${i.currency}&ids=the-open-network`).then(o).catch((e=>console.error(e.error))),setTimeout(a,2e4)};window.addEventListener("resize",n),n(),window.addEventListener("load",(()=>{a()}));const c=s("[data-toncoin-card]");new class{constructor(e,t){this.el=document.querySelector(e),this.el.classList.add("select"),this.options=t,this.selected=t.valueDefault,this.position="top"===t.position?"top":"bottom",this.#e(),this.#t()}#e(){this.el.innerHTML=this.#s()}#t(){this.el.addEventListener("click",(e=>{const{type:t}=e.target.dataset;if("input"===t||void 0===t||"arrow"===t)this.toggle();else if("item"===t){const t=e.target.dataset.id;this.select(t),this.close()}else"backdrop"===t&&this.close()})),this.value=this.el.querySelector("span")}get isOpen(){return this.el.classList.contains("open")}select(e){this.selected=e,this.value.textContent=this.options.data[e],this.options.onChange&&this.options.onChange(this.selected)}toggle(){this.isOpen?this.close():this.open()}open(){this.el.classList.add("open")}close(){this.el.classList.remove("open")}#s(){const{data:e}=this.options,t=this.selected?e[this.selected]:e[Object.keys(e)[0]],s=Object.keys(e).map((t=>`<li class="select__item" data-type="item" data-id="${t}">${e[t]}</li>`));return`\n        <div class="select__backdrop" data-type="backdrop"></div>\n        <div class="select__input" data-type="input">\n          <span>${t}</span>\n          <i class="fa fa-chevron-down" data-type="arrow"></i> \n        </div>\n        <div class="select__dropdown ${this.position}">\n          <ul class="select__list">\n            ${s.join("")}\n          </ul>\n        </div>\n    `}}("#select-currency",{data:{usd:"United States Dollar",eur:"Euro",rub:"Russian Ruble",krw:"South Korean Won",cny:"China Yuan"},valueDefault:i.currency,onChange(t){(t=>{i.currency=t,localStorage.setItem(`${e}`,JSON.stringify(i)),c.innerHTML='<div class="loader"></div>',a()})(t)},position:"top"});const r=s("#slidebar .slidebar__toggle"),l=s("#slidebar .slidebar__body");r.addEventListener("click",(()=>{r.classList.toggle("active"),l.classList.toggle("active")})),s("#connect-btn").addEventListener("click",(()=>{alert("connect wallet")}))})();